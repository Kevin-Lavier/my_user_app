require 'sqlite3'

class User
  DB_FILENAME = 'db.sql'

  attr_reader :id, :firstname, :lastname, :age, :password, :email

  def initialize(id, firstname, lastname, age, password, email)
    @id = id
    @firstname = firstname
    @lastname = lastname
    @age = age
    @password = password
    @email = email
  end

  # Method to initialize the database
  def self.init_db
    db = SQLite3::Database.new(DB_FILENAME)
    db.execute <<-SQL
      CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        firstname TEXT NOT NULL,
        lastname TEXT NOT NULL,
        age INTEGER NOT NULL,
        password TEXT NOT NULL,
        email TEXT NOT NULL UNIQUE
      );
    SQL
    db.close
  end

  # Method to create a user and return a `User` object
  def self.create(firstname:, lastname:, age:, password:, email:)
    self.init_db

    db = SQLite3::Database.new(DB_FILENAME)
    
    # Check if the email already exists
    existing_user = db.execute("SELECT id FROM users WHERE email = ?", [email]).first
  
    if existing_user
      db.close
      return { error: "This email is already in use" }
    end

    # Insert the user into the database
    db.execute("INSERT INTO users (firstname, lastname, age, password, email) VALUES (?, ?, ?, ?, ?)", 
               [firstname, lastname, age, password, email])

    # Retrieve the ID generated by SQLite
    user_id = db.last_insert_row_id
    db.close

    # Return a `User` object with the inserted data
    User.new(user_id, firstname, lastname, age, password, email)
  end
end
